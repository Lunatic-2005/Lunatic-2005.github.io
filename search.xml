<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2025/04/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>ͼ��ģ�ͣ����·���㷨</title>
    <url>/2025/04/02/%E5%9B%BE%E8%AE%BA%E6%A8%A1%E5%9E%8B%EF%BC%9A%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<h2 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h2><p>ͼ������ͼ������ͼ�Ķ���������ԡ�</p>
<p>����1 �޻������رߵ�ͼ��Ϊ��ͼ��</p>
<p>����2 ��������������ڵļ�ͼ��Ϊ��ȫͼ������n���������ȫͼ��Ϊ$K_n$</p>
<p>����3 ����Ķȣ�</p>
<p>��1��������ͼ�У��붥��v�����ıߵ���Ŀ���������Σ���Ϊ�����Ķȣ���Ϊ$d��v��$</p>
<p>��2��������ͼ�У��Ӷ���v�����Ļ�����Ŀ��Ϊv��v�ĳ��ȣ���Ϊ$d^+(v)$,�Ӹõ�����Ļ�����Ŀ��Ϊ��ȣ���Ϊ$d^-(v)$,�������֮�ͼ�Ϊ����Ķȡ�</p>
<p>����1 ������ͼ����</p>
<p>$$<br>\sum d(v)&#x3D;2 \cdot \left|E\right|<br>$$</p>
<p>���ۣ��κ�ͼ�е��涥������Ϊż��.</p>
<h2 id="ͼ�l����ʾ"><a href="#ͼ�l����ʾ" class="headerlink" title="ͼ�ľ����ʾ"></a>ͼ�ľ����ʾ</h2><p><strong>1.��������</strong><br>��������ͼ ${G}$����������� ${M&#x3D;(m_{ij}){n\times m}}$<em>������<br>$m{ij} &#x3D; \begin{cases}<br>1, &amp; \text{if } v_i \text{ is related to } e_j \<br>0, &amp; \text{if } v_i \text{ is not related to } e_j<br>\end{cases}$</em></p>
<p>��������ͼ${G}$��������� ${M&#x3D;(m_{ij}){n\times m}}$*������</p>
<p>$m{ij} &#x3D; \begin{cases}<br>1, &amp; \text{�� } v_i \text{ ����ʼ�� }  \<br>0, &amp; \text{�� } v_i \text{ �� } e_j \text{ �޹�} \<br>-1, &amp; \text{�� } v_i \text{ ��ĩ�˵� }  \<br>\end{cases}$*</p>
<p><strong>2.�ڽӾ���</strong></p>
<p>��������Ȩͼ ${G}$�����ڽӾ��� ${W&#x3D;(m_{ij}){n\times m}}$<em>������<br>$w{ij} &#x3D;<br>\begin{cases}<br>\text{weight between } v_i \text{ and } v_j, &amp; \text{���� } v_i \text{ �� } v_j \text{ ����} \<br>0, &amp; \text{���� } v_i \text{ �� } v_j \text{ ������}<br>\end{cases}$</em><br>��������Ȩͼ����ʽ��Ϊ��<br>$w_{ij} &#x3D;<br>\begin{cases}<br>\text{weight between } v_i \text{ and } v_j, &amp; (v_i,v_j) \in A \<br>0, &amp; \text{���� } v_i \text{ ָ�� } v_j \text{ �Ļ������ڻ�}i&#x3D;j<br>\end{cases}$</p>
<h2 id="���·�㷨"><a href="#���·�㷨" class="headerlink" title="���·�㷨"></a>���·�㷨</h2><p><strong>1.Dijkstra�㷨��̰���㷨��</strong><br>����һ��̰���㷨������Ҫ�õ����ǵ�������������������һ����Ҫ�����Ե����ʣ�<strong>���·��һ��·������������·Ҳ�Ǹ���·���˵������·</strong>��<br>���㷨�ĺ���˼���ǣ�<strong>������ɽ���Զ����õ���������·�;��룬ֱ������ĳ������</strong>��<br>Ϊ�˱����ظ�������ÿһ���ļ�����Ϣ���������ⶥ��$v_i$���������Ǻţ�<br>$l(v):\text{����v�ı�ţ���ʾ��㵽v��ĵ�ǰ·������} \<br>z(v):\text{����v�ĸ������ţ�����ȷ�����·�ߣ�������������������ã�} \<br>S_i: \text{��ʾ�������ñ�ŵĶ��㼯}$</p>
<p>�㷨�Ĳ�������������ʾ��</p>
<p>�����u_0��</p>
<ol>
<li>$l(u_0)&#x3D;0$,��$v \neq u_0,\text{��}l(v)&#x3D;��,z(v)&#x3D;u_0,S_0&#x3D;{u_0},i&#x3D;0.$</li>
<li>��ÿ��$v \in \overline {S_i} (\overline{S_i}&#x3D;V&#x2F;S_i),\text{��}l(v)&#x3D;min{l(v),l(v_{previous})+w(v_{previous}v)})$</li>
</ol>
<p>$���У�w_{uv}��ʾ����u��v֮��ߵ�Ȩֵ.���������һ���ڵ�Ե�ǰ�ڵ��l(v)�������޸ģ���z(v)&#x3D;v_{previous},����z(v)����.����min{l(v)},�Ѵﵽ�����Сֵ��һ�����㼴Ϊu_{i+1},��S_{i+1}&#x3D;S_i$<br>�㷨��α�����ʾ���£�<br>Q &#x3D; G.V  &#x2F;&#x2F; Q ��һ�����ȶ��У��� l(v) ����</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// ��ѭ��</span><br><span class="line">DIJKSTRA(G, w, s)</span><br><span class="line">// ��ʼ��</span><br><span class="line">for each vertex v in G.V:</span><br><span class="line">l(v) = ��</span><br><span class="line">z(v) = NIL</span><br><span class="line">l(s) = 0</span><br><span class="line">S_i =</span><br><span class="line">while Q is not empty:</span><br><span class="line">    u = EXTRACT-MIN(Q)  // �� Q ��ȡ�� l(v) ��С�Ķ��� u</span><br><span class="line">    S_i = S_i �� &#123;u&#125;    // �� u �������ñ�ż��� S_i</span><br><span class="line">    for each vertex v in G.Adj[u]:  // ���� u �������ڽӶ��� v</span><br><span class="line">        if l(v) &gt; l(u) + w(u, v):  // �ɳڲ���</span><br><span class="line">            l(v) = l(u) + w(u, v)</span><br><span class="line">            z(v) = u</span><br><span class="line">            DECREASE-KEY(Q, v, l(v))  // ���� Q �� v �����ȼ�</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>��������pythonʵ�ֵ��㷨��</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dijkstra</span>(<span class="params">graph, start</span>):</span><br><span class="line">    <span class="comment"># ��ʼ�������ֵ�͸������ֵ�</span></span><br><span class="line">    l = &#123;vertex: <span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) <span class="keyword">for</span> vertex <span class="keyword">in</span> graph&#125;</span><br><span class="line">    z = &#123;vertex: <span class="literal">None</span> <span class="keyword">for</span> vertex <span class="keyword">in</span> graph&#125;</span><br><span class="line">    l[start] = <span class="number">0</span>  <span class="comment"># ���ľ���Ϊ0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ʹ�����ȶ��д洢 (����, ����) ��</span></span><br><span class="line">    priority_queue = [(<span class="number">0</span>, start)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> priority_queue:</span><br><span class="line">        current_distance, u = heapq.heappop(priority_queue)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># �����ǰ���������֪��̾��룬������</span></span><br><span class="line">        <span class="keyword">if</span> current_distance &gt; l[u]:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># �����ڽӶ���</span></span><br><span class="line">        <span class="keyword">for</span> v, weight <span class="keyword">in</span> graph[u].items():</span><br><span class="line">            distance = current_distance + weight</span><br><span class="line"></span><br><span class="line">            <span class="comment"># ������ָ���·���������</span></span><br><span class="line">            <span class="keyword">if</span> distance &lt; l[v]:</span><br><span class="line">                l[v] = distance</span><br><span class="line">                z[v] = u</span><br><span class="line">                heapq.heappush(priority_queue, (distance, v))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> l, z</span><br><span class="line"></span><br><span class="line"><span class="comment"># ʾ��ͼ���ڽӱ���ʾ</span></span><br><span class="line">graph = &#123;</span><br><span class="line">    <span class="string">&#x27;A&#x27;</span>: &#123;<span class="string">&#x27;B&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">4</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;B&#x27;</span>: &#123;<span class="string">&#x27;A&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">5</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;C&#x27;</span>: &#123;<span class="string">&#x27;A&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;B&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;D&#x27;</span>: <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>: &#123;<span class="string">&#x27;B&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;C&#x27;</span>: <span class="number">1</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">l, z = dijkstra(graph, <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;��̾���:&quot;</span>, l)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;�������¼:&quot;</span>, z)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>������һ�����������������㷨��</p>
<p><strong>2.Floid�㷨������̬�滮��</strong></p>
<p>���һ���ڵ�λ����㵽�ص����̾���·���ϣ��Խڵ�0��8Ϊ����</p>
<ol>
<li>$l��0��8��&#x3D;l(0 \to 4)+l(4\to 8)(\text{if 4} \in \text{the shortest way }) \l��0��8��&lt;l(0 \to 6)+l(6\to 8)(\text{if 6} \notin \text{the shortest way })$</li>
<li>Python���루Ƭ�Σ���</li>
</ol>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.V):</span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.V):</span><br><span class="line">		<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="variable language_">self</span>.V):</span><br><span class="line">			<span class="keyword">if</span> <span class="variable language_">self</span>.D[i][k]+<span class="variable language_">self</span>[k][j]&lt;<span class="variable language_">self</span>.D[i][j]:</span><br><span class="line">				<span class="variable language_">self</span>.D[i][j]=<span class="variable language_">self</span>.D[i][k]+<span class="variable language_">self</span>[k][j]</span><br><span class="line">				<span class="variable language_">self</span>.S[i][j]=<span class="variable language_">self</span>.S[i][k]</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>��ѧ��ģ</tag>
      </tags>
  </entry>
</search>
